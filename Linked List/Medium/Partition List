https://leetcode.com/problems/partition-list/

APPROACH: USING EXTRA SPACE
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)  

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* greater = new ListNode(-1);
        ListNode* smaller = new ListNode(-1);

        ListNode* t1 = smaller;
        ListNode* t2 = greater;

        ListNode* temp = head;

        while(temp){
            ListNode *nnode = new ListNode(temp->val);
            if(temp->val < x){
                t1->next = nnode;
                t1 = t1->next;
            }
            else{
                t2->next = nnode;
                t2 = t2->next;
            }
            temp = temp->next;
        }
        t1->next = greater->next;
        t2->next = NULL;
        return smaller->next;
    }
};
