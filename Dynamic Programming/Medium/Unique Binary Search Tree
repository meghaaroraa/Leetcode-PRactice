https://leetcode.com/problems/unique-binary-search-trees/

APPROACH : TREES
TIME COMPLEXITY = O(N^2)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n+1, 0);
        dp[0] = 1;
        dp[1] = 1;

        for(int i=2; i<=n; i++){
            int ans = 0;
            for(int j=0; j<i; j++) ans += dp[j] * dp[i-j-1];
            dp[i] = ans;
        }
        return dp[n];
    }
};
