https://leetcode.com/problems/guess-number-higher-or-lower-ii/

APPROACH : DYNAMIC PROGRAMMING
TIME COMPLEXITY = O(N^3)
SPACE COMPLEXITY = O(N^2)

class Solution {
public:
    int helper(int st, int end, vector<vector<int>>& dp){
        if(st >= end) return 0;
        if(dp[st][end] != -1) return dp[st][end];

        int ans = INT_MAX;

        for(int i=st; i<=end; i++) ans = min(ans, i + max(helper(st, i-1, dp), helper(i+1, end, dp)));
        
        return dp[st][end] = ans;
    }

    int getMoneyAmount(int n) {
        vector<vector<int>> dp(n+1, vector<int>(n+1, -1));
        return helper(1,n,dp);
    }
};
