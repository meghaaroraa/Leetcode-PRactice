https://leetcode.com/problems/palindromic-substrings/

APPROACH : PALINDROME
TIME COMPLEXITY = O(N^3)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    bool isPalindrome(string temp){
        int n = temp.length();

        for(int i=0; i<=n/2; i++){
            if(temp[i] != temp[n-i-1]) return false;
        }
        return true;
    }

    int countSubstrings(string s) {
        int ans = 0;
        int n = s.length();

        for(int i=0; i<n; i++){
            string temp = "";

            for(int j=i; j<n; j++){
                temp += s[j];
                if(isPalindrome(temp)) ans++;
            }
        }
        return ans;
    }
};
