https://leetcode.com/problems/perfect-squares/

APPROACH : DP
TIME COMPLEXITY = O(N * N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    int helper(int n, vector<int>& dp){
        if(n <= 0) return 0;
        if(dp[n] != -1) return dp[n];

        int ans = INT_MAX;
        for(int i=1; i*i <= n; i++){
            int sq = i*i;
            int cnt = helper(n - sq, dp) + 1;
            ans = min(ans, cnt);
        }
        return dp[n] = ans;
    }

    int numSquares(int n) {
        vector<int> dp(10001, -1);
        return helper(n,dp);
    }
};
