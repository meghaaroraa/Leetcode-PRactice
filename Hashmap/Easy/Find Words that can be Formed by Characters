https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/

APPROACH: 
TIME COMPLEXITY = O(N^2)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    int countCharacters(vector<string>& words, string chars) {
        vector<int> freq(26);
        for(char ch : chars) freq[ch - 'a']++;

        int ans = 0;
        for(auto word : words){
            vector<int> temp(26);
            for(char w : word) temp[w - 'a']++;

            bool flag = true;
            for(int i=0; i<26; i++){
                if(temp[i] > freq[i]){
                    flag = false;
                    break;
                }
            }

            if(flag) ans += word.length();
        }
        return ans;
    }
};
