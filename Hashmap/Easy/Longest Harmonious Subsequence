https://leetcode.com/problems/longest-harmonious-subsequence/

APPROACH: 
TIME COMPLEXITY = O(NLogN)
SPACE COMPLEXITY = O(LogN)

class Solution {
public:
    int findLHS(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(), nums.end());

        int st = 0;
        int end = 0;
        int len = 0;

        while(end < n){
            while(nums[end] - nums[st] > 1) st++;
            if(nums[end] - nums[st] == 1) len = max(len, end - st + 1);
            end++;
        }
        return len;
    }
};
