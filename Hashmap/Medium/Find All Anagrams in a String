https://leetcode.com/problems/find-all-anagrams-in-a-string/

APPROACH: SLIDING WINDOW
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(M + N)

class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        int n = s.length();
        int m = p.length();
        if(n < m) return {};

        unordered_map<char, int> m1;
        unordered_map<char, int> m2;

        for(int i=0; i<m; i++){
            m1[s[i]]++;
            m2[p[i]]++;
        }

        vector<int> ans;
        if(m1 == m2) ans.push_back(0);

        int k = 0;
        for(int i=m; i<n; i++){
            if(m1[s[k]] == 1) m1.erase(s[k]);
            else m1[s[k]]--;

            k++;
            m1[s[i]]++;
            if(m1 == m2) ans.push_back(k);
        }
        return ans;
    }
};
