https://leetcode.com/problems/n-ary-tree-preorder-traversal/

APPROACH: RECURSION
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    void helper (Node* root, vector<int>& ans){
        if(!root) return;
        ans.push_back(root->val);
        for(auto it : root->children) helper(it, ans);
        return;
    }

    vector<int> preorder(Node* root) {
        if(!root) return {};
        vector<int> ans;
        helper(root, ans);
        return ans;
    }
};
