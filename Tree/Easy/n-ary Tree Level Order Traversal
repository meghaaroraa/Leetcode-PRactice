https://leetcode.com/problems/n-ary-tree-level-order-traversal/

APPROACH: QUEUE
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        if(!root) return ans;

        queue<Node*> q;
        q.push(root);

        while(!q.empty()){
            int n = q.size();
            vector<int> temp;

            for(int i=0; i<n; i++){
                Node* it = q.front();
                q.pop();
                temp.push_back(it->val);

                for(auto ch : it->children) q.push(ch);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
