https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/

APPROACH: VALID PARENTHESES
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    int minAddToMakeValid(string s) {
        stack<char> st;
        int n = s.length();

        for(int i=0; i<n; i++){
            if(s[i] == '(') st.push('(');
            else if(s[i] == ')' && !st.empty() && st.top() == '(') st.pop();
            else st.push(')');
        }
        return st.size();
    }
};

APPROACH: STACK
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    int minAddToMakeValid(string s) {
        stack<char>st;
        int cnt = 0;
        int n = s.length();
        for(int i=0; i<n; i++){
            if(s[i]=='(') st.push('(');

            else if(s[i]==')'){
                if(st.empty()) cnt++;
                else st.pop();
            }
        }

        cnt += st.size();
        return cnt;
    }
};
