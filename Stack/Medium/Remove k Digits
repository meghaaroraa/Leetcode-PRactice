https://leetcode.com/problems/remove-k-digits/

APPROACH:
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    string removeKdigits(string num, int k) {
        stack<char> st;
        int n = num.size();

        for(int i=0; i<n; i++){
            char ch = num[i];

            while(!st.empty() && st.top() > ch && k>0){
                st.pop();
                k--;
            }
            st.push(ch);
        }

        while(k != 0){
            st.pop();
            k--;
        }

        string ans = "";
        while(!st.empty()){
            char ch = st.top();
            ans += ch;
            st.pop();
        }

        while(ans.back() == '0') ans.pop_back();
        reverse(ans.begin(),ans.end());
        
        if(ans.empty()) return "0";
        else return ans;
    }
};
