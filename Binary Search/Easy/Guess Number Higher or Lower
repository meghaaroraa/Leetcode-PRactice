https://leetcode.com/problems/guess-number-higher-or-lower/

APPROACH : LINEAR SEARCH
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)
* GIVES TLE *

/** 
 * Forward declaration of guess API.
 * @param  num   your guess
 * @return 	     -1 if num is higher than the picked number
 *			      1 if num is lower than the picked number
 *               otherwise return 0
 * int guess(int num);
 */

class Solution {
public:
    int guessNumber(int n) {
        for(int i=1; i<n; i++){
            if(guess(i) == 0) return i;
        }
        return n;
    }
};

APPROACH 2 : BINARY SEARCH
TIME COMPLEXITY = O(LogN)
SPACE COMPLEXITY = O(1)

/** 
 * Forward declaration of guess API.
 * @param  num   your guess
 * @return 	     -1 if num is higher than the picked number
 *			      1 if num is lower than the picked number
 *               otherwise return 0
 * int guess(int num);
 */

class Solution {
public:
    int guessNumber(int n) {
        int st = 1;
        int end = n;

        while(st <= end){
            int mid = st + (end - st) / 2;

            if(guess(mid) == 0) return mid;
            if(guess(mid) < 0) end = mid - 1;
            else st = mid + 1;
        }
        return -1;
    }
};
