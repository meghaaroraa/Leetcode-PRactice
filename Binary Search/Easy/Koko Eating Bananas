https://leetcode.com/problems/koko-eating-bananas/

APPROACH : BINARY SEARCH
TIME COMPLEXITY = O(NLogN)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        sort(piles.begin(), piles.end());

        int n = piles.size();
        int st = 1;
        int end = piles[n-1];
        int ans = 1;

        while(st <= end){
            int mid = st + (end - st) / 2;
            long long int hours = 0;

            for(int i=0; i<n; i++) hours += (piles[i] - 1) / mid + 1;
            if(hours <= h){
                ans = mid;
                end = mid-1;
            }
            else st = mid+1;
        }
        return ans;
    }
};
