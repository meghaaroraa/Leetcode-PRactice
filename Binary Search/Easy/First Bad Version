https://leetcode.com/problems/first-bad-version/

APPROACH 1 : LINEAR SCAN
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)

// The API isBadVersion is defined for you.
// bool isBadVersion(int version);

class Solution {
public:
    int firstBadVersion(int n) {
        for(int i=1; i<=n; i++){
            if(isBadVersion(i)) return i;
        }
        return -1;
    }
};

APPROACH 2 : BINARY SEARCH
TIME COMPLEXITY = O(LogN)
SPACE COMPLEXITY = O(1)

// The API isBadVersion is defined for you.
// bool isBadVersion(int version);

class Solution {
public:
    int firstBadVersion(int n) {
        int st = 0;
        int end = n;

        while(st <= end){
            int mid = st + (end - st) / 2;
            if(isBadVersion(mid)) end = mid-1;
            else st = mid+1;
        }
        return st;
    }
};
