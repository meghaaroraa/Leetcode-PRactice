https://leetcode.com/problems/spiral-matrix/

APPROACH : BRUTE FORCE
TIME COMPLEXITY = O(N^2)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();

        int srow = 0;
        int erow = n-1;

        int scol = 0;
        int ecol = m-1;

        vector<int> ans;

        while(srow <= erow && scol <= ecol){
            for(int i=scol; i<=ecol; i++){
                ans.push_back(matrix[srow][i]);
            }
            srow++;

            for(int i=srow; i<=erow; i++){
                ans.push_back(matrix[i][ecol]);
            }
            ecol--;

            if(srow <= erow){
                for(int i=ecol; i>=scol; i--){
                    ans.push_back(matrix[erow][i]);
                }
                erow--;
            }

            if(scol <= ecol){
                for(int i=erow; i>=srow; i--){
                    ans.push_back(matrix[i][scol]);
                }
                scol++;
            }
        }

        return ans;
    }
};
