https://leetcode.com/problems/move-zeroes/

APPROACH 1 : USING EXTRA SPACE
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(n,0);
        int idx = 0;

        for(int i=0; i<n; i++){
            if(nums[i] != 0) ans[idx++] = nums[i];
        }
        nums = ans;
    }
};

APPROACH 2 : TWO POINTER
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n = nums.size();
        int i = 0;
        int j = 0;

        while(i<n){
            if(nums[i] == 0) i++;
            else{
                swap(nums[i], nums[j]);
                i++;
                j++;
            }
        }
    }
};
