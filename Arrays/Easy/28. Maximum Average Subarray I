https://leetcode.com/problems/maximum-average-subarray-i/

APPROACH  : SLIDING WINDOW
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        int n = nums.size();
        int sum = 0;

        for(int i=0; i<k; i++) sum += nums[i];
        double ans = sum * 1.0 / k;

        for(int i=k; i<n; i++){
            sum = sum - nums[i-k] + nums[i];
            double avg = sum * 1.0 / k;
            ans = max(ans, avg);
        }
        return ans;
    }
};
