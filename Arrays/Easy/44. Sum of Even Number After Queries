https://leetcode.com/problems/sum-of-even-numbers-after-queries/

APPROACH 1 : BRUTE FORCE
TIME COMPLEXITY = O(N*Q)
SPACE COMPLEXITY = O(Q)
* GIVES TLE *

class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {
        int n = nums.size();
        int q = queries.size();
        vector<int> ans;

        for(int i=0; i<q; i++){
            nums[queries[i][1]] += queries[i][0];
            int sum = 0;

            for(int j=0; j<n; j++){
                if(nums[j]%2 == 0) sum += nums[j];
            }
            ans.push_back(sum);
        }
        return ans;
    }
};

APPROACH 2 : MAINTAINING SUM
TIME COMPLEXITY = O(N+Q)
SPACE COMPLEXITY = O(Q)

class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {
        int n = nums.size();
        int q = queries.size();

        int sum = 0;
        for(int i=0; i<n; i++){
            if(nums[i]%2 == 0) sum += nums[i];
        }

        vector<int> ans;

        for(int i=0; i<q; i++){
            int val = queries[i][0];
            int idx = queries[i][1];

            if(nums[idx]%2 == 0) sum -= nums[idx];
            nums[idx] += val;
            if(nums[idx]%2 == 0) sum += nums[idx];
            ans.push_back(sum);
        }
        return ans;
    }
};
