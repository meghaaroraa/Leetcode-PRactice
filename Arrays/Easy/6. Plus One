https://leetcode.com/problems/plus-one/description/

APPROACH 1 : CARRY METHOD
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int n = digits.size();
        int carry = 1;

        for(int i=n-1; i>=0; i--){
            digits[i] += carry;
            carry = digits[i]/10;
            digits[i] %= 10;
        }

        if(carry) digits.insert(digits.begin(),carry);
        return digits;
    }
};

APPROACH 2 : BEATS 100%
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int n = digits.size();

        for(int i=n-1; i>=0; i--){
            if(digits[i] < 9){
                digits[i]++;
                return digits;
            }
            else digits[i] = 0;
        }

        digits[0] = 1;
        digits.push_back(0);
        return digits;
    }
};
