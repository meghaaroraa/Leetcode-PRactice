https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/

APPROACH 1 : 2 LOOPS
TIME COMPLEXITY = O(N^2)
SPACE COMPLEXITY = O(1)
* GIVES TLE *

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int profit = 0;
        int n = prices.size();

        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                profit = max(profit, prices[j] - prices[i]);
            }
        }
        return profit;
    }
};

APPROACH 2 : ONE PASS
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int buy = prices[0];
        int profit = 0;

        for(int i=1; i<prices.size(); i++){
            buy = min(buy, prices[i]);
            int sell = prices[i] - buy;
            profit = max(profit, sell);
        }
        return profit;
    }
};
