https://leetcode.com/problems/pascals-triangle/description/

APPROACH : T(n2)S(n2)
TIME COMPLEXITY = O(N^2)
SPACE COMPLEXITY = O(N^2)

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans(numRows);

        for(int i=0; i<numRows; i++){
            int val = 1;
            for(int j=0; j<=i; j++){
                if(j==0 || j==i) ans[i].push_back(1);
                else{
                    val = ((i-j+1) * val / j);
                    ans[i].push_back(val);
                }
            }
        }
        return ans;
    }
};
