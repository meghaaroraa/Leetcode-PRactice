https://leetcode.com/problems/contains-duplicate/

APPROACH 1 : SORTING
TIME COMPLEXITY = O(NlogN)
SPACE COMPLEXITY = O(1)

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(), nums.end());

        for(int i=0; i<nums.size()-1; i++){
            if(nums[i] == nums[i+1]) return true;
        }
        return false;
    }
};

APPROACH 2 : HASHMAP
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_map<int,int> mp;

        for(int i=0; i<nums.size(); i++){
            mp[nums[i]]++;
            if(mp[nums[i]] == 2) return true;
        }
        return false;
    }
};
