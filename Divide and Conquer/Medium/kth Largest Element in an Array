https://leetcode.com/problems/kth-largest-element-in-an-array/

APPROACH 1: SORTING
TIME COMPLEXITY = O(NLogN)
SPACE COMPLEXITY = O(LogN)

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        sort(nums.begin(), nums.end());
        return nums[nums.size() - k];
    }
};

APPROACH 2: PRIORITY QUEUE
TIME COMPLEXITY = O(N)
SPACE COMPLEXITY = O(N)

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int, vector<int>, greater<int>> pq;
        int n = nums.size();

        for(int i=0; i<n; i++){
            if(pq.size() < k || pq.size() == k && pq.top() < nums[i]) pq.push(nums[i]);
            if(pq.size() > k) pq.pop();
        }
        return pq.top();
    }
};
